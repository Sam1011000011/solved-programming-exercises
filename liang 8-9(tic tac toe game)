/*(Game: play a tic-tac-toe game) In a game of tic-tac-toe, two players take turns
marking an available cell in a 3 * 3 grid with their respective tokens (either
X or O). When one player has placed three tokens in a horizontal, vertical, or
diagonal row on the grid, the game is over and that player has won. A draw (no
winner) occurs when all the cells on the grid have been filled with tokens and
neither player has achieved a win. Create a program for playing tic-tac-toe.
The program prompts two players to enter an X token and O token alternately. Whenever a token is entered, the program redisplays the board on the
console and determines the status of the game (win, draw, or continue)*/

import java.util.Scanner;

public class Main {
    static Scanner input = new Scanner(System.in);
    static String winner="";
    public static void main(String[] args) {
        String[][] tictactoeBoard = new String[3][3];
        int round = 1;
        while (round <= 9 && winner == "") {
            if (round % 2 == 1)
                takeXInput(tictactoeBoard);
            else
                takeOInput(tictactoeBoard);
            printBoard(tictactoeBoard);
            round++;
            determineWinner(tictactoeBoard);
        }
        determineWinner(tictactoeBoard);
        if(winner=="")
            System.out.println("It's a draw!");
        else
            System.out.println(winner+" player has won");
    }

    private static void determineWinner(String[][] tictactoeBoard) {
        for(int i=0;i<3;i++){
            if(tictactoeBoard[i][0]==tictactoeBoard[i][1]&&tictactoeBoard[i][1]==tictactoeBoard[i][2]&&tictactoeBoard[i][0]!=null)
                winner=tictactoeBoard[i][0];}
        for(int j=0;j<3;j++)
            if(tictactoeBoard[0][j]==tictactoeBoard[1][j]&&tictactoeBoard[1][j]==tictactoeBoard[2][j]&&tictactoeBoard[0][j]!=null)
                winner=tictactoeBoard[0][j];
        if(tictactoeBoard[0][0]==tictactoeBoard[1][1]&&tictactoeBoard[1][1]==tictactoeBoard[2][2]&&tictactoeBoard[0][0]!=null)
            winner=tictactoeBoard[0][0];
        if(tictactoeBoard[0][2]==tictactoeBoard[1][1]&&tictactoeBoard[1][1]==tictactoeBoard[2][0]&&tictactoeBoard[1][1]!=null)
            winner=tictactoeBoard[1][1];
    }

    private static void printBoard(String[][] tictactoeBoard) {
        for(int i=0;i< 3;i++){
            System.out.println("-------------");
            System.out.print("|");
                for(int j=0;j<3;j++){
                    if(tictactoeBoard[i][j]!=null)
                        System.out.print(" "+tictactoeBoard[i][j]+" |");
                    else
                        System.out.print("   |");
                }
            System.out.println();
        }
        System.out.println("-------------");
    }

    public static void takeOInput(String[][] tictactoeBoard) {
        System.out.println("Enter a row (0, 1, or 2) for player O: ");
        int i= input.nextInt();
        System.out.println("Enter a column (0, 1, or 2) for player O: ");
        int j= input.nextInt();
        if(tictactoeBoard[i][j]!=null){
            System.out.println("your input is not valid please try again");
            takeOInput(tictactoeBoard);}
        else
        tictactoeBoard[i][j]="O";
    }

    private static void takeXInput(String[][] tictactoeBoard) {
        System.out.println("Enter a row (0, 1, or 2) for player X: ");
        int i= input.nextInt();
        System.out.println("Enter a column (0, 1, or 2) for player X: ");
        int j= input.nextInt();
        if(tictactoeBoard[i][j]!=null){
            System.out.println("your input is not valid please try again");
            takeXInput(tictactoeBoard);}
        else
            tictactoeBoard[i][j]="X";
    }
}
