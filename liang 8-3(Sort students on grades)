/*(Sort students on grades) Rewrite Listing 8.2, GradeExam.java, to display the
students in increasing order of the number of correct answers*/

public class Main {
    public static void main(String[] args) {
        char[][] answers = {
                {'A', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'},
                {'D', 'B', 'A', 'B', 'C', 'A', 'E', 'E', 'A', 'D'},
                {'E', 'D', 'D', 'A', 'C', 'B', 'E', 'E', 'A', 'D'},
                {'C', 'B', 'A', 'E', 'D', 'C', 'E', 'E', 'A', 'D'},
                 {'A', 'B', 'D', 'C', 'C', 'D', 'E', 'E', 'A', 'D'},
                 {'B', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D'},
                 {'B', 'B', 'A', 'C', 'C', 'D', 'E', 'E', 'A', 'D'},
                 {'E', 'B', 'E', 'C', 'C', 'D', 'E', 'E', 'A', 'D'}};

        int [] students={0,1,2,3,4,5,6,7};
         // Key to the questions
         char[] keys = {'D', 'B', 'D', 'C', 'C', 'D', 'A', 'E', 'A', 'D'};
         int [] grades=new int[8];
         // Grade all answers
        for (int i = 0; i < answers.length; i++) {
             // Grade one student
             for (int j = 0; j < answers[i].length; j++) {
                 if (answers[i][j] == keys[j])
                     grades[i]++;}
             }
        sortDescending(students,grades);
        for(int i=0;i< students.length;i++)
            System.out.println("Student "+students[i]+"'s correct count is "+grades[i]);
    }
    static void sortDescending(int [] students, int [] grades){
        for(int i=0;i<grades.length-1;i++) {
            int currentMax = grades[i];
            int currentMaxIndex = i;
            for(int j=i+1;j<grades.length;j++)
                if(grades[j]>currentMax)
                {currentMax=grades[j];
                    currentMaxIndex=j;
                }
            if(currentMaxIndex!=i){
                grades[currentMaxIndex] = grades[i];
                grades[i] = currentMax;
                int currentMaxStudent=students[currentMaxIndex];
                students[currentMaxIndex]=students[i];
                students[i]=currentMaxStudent;}
    }}}
