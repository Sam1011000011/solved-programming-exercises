/*(Explore matrix) Write a program that prompts the user to enter the length of a
square matrix, randomly fills in 0s and 1s into the matrix, prints the matrix, and
finds the rows, columns, and diagonals with all 0s or 1s.*/


import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("enter the length of the square matrix : ");
        int length=sc.nextInt();
        int[][] matrix=make_0_1_Matrix(length);
        printMatrix(matrix);
        printSameRows(matrix);
        printSameColumns(matrix);
        printSameDiagonals(matrix);
    }

    private static void printMatrix(int[][] matrix){
        for(int i=0;i< matrix.length;i++){
            for(int j=0;j<matrix[i].length;j++)
                System.out.print(matrix[i][j]+" ");
            System.out.println();
        }}

    private static void printSameRows(int[][] matrix) {
        boolean saw_Row=false;
        for(int i=0;i< matrix.length;i++){
            boolean sameNumbers=true;
            for(int j=0;j<matrix[i].length-1;j++)
                if(matrix[i][j]!=matrix[i][j+1])
                    sameNumbers=false;
            if(sameNumbers){
                System.out.println("all "+matrix[i][0]+"s on row "+i);
                saw_Row=true;
        }}
        if (!saw_Row)
            System.out.println("No same numbers on a row");
    }

    private static void printSameColumns(int[][] matrix) {
        boolean saw_Column=false;
        for(int i=0;i< matrix.length;i++){
            boolean sameNumbers=true;
            for(int j=0;j<matrix[i].length-1;j++)
                if(matrix[j][i]!=matrix[j+1][i])
                    sameNumbers=false;
            if(sameNumbers){
                System.out.println("all "+matrix[0][i]+"s on columns "+i);
                saw_Column=true;
            }
    }
        if (!saw_Column)
            System.out.println("No same numbers on a column");}

    private static void printSameDiagonals(int[][] matrix) {
        //checks major diagonal
        boolean sameNumbers=true;
        for(int i=0;i< matrix.length-1;i++)
            if (matrix[i][i] != matrix[i + 1][i + 1]) {
                sameNumbers = false;
                break;
            }
        if(sameNumbers)
            System.out.println("all "+matrix[0][0]+"s on the major diagonal");
        else
            System.out.println("No same numbers on the major diagonal");
        int l=matrix.length-1;
        //checks minor diagonal
        sameNumbers=true;
        for(int i=l;i>0;i--)
            if (matrix[l - i][i] != matrix[l - (i - 1)][i - 1]) {
                sameNumbers = false;
                break;
            }
        if(sameNumbers)
            System.out.println("all "+matrix[0][l]+"s on the minor diagonal");
        else
            System.out.println("No same numbers on the minor diagonal");
    }

    private static int[][] make_0_1_Matrix(int length) {
        int[][] matrix=new int[length][length];
        for(int i=0;i<length;i++)
            for (int j=0;j<length;j++)
                matrix[i][j]=(int)(Math.random()*2);
        return matrix;
    }
}
