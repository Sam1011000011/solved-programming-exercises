/*Algebra: perfect square) Write a program that prompts the user to enter an integer m and find the smallest integer n such that m * n is a perfect square. (Hint:
Store all smallest factors of m into an array list. n is the product of the factors that
appear an odd number of times in the array list. For example, consider m = 90,
store the factors 2, 3, 3, 5 in an array list. 2 and 5 appear an odd number of times
in the array list. So, n is 10.)*/
import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("enter an integer : ");
        int num=sc.nextInt();
        ArrayList<Integer>a=new ArrayList<>();
        while(num!=1){
            for(int i=2;i<num+1;i++)
            {if(num%i==0)
                while(num%i==0){
                    a.add(i);
                    num/=i;
                }
            }
        }
        System.out.println(a);
        int m=1;
        int prevN=0;
        for( int n : a){
            if(n!=prevN){
            int count=Collections.frequency(a, n);
            if(count%2!=0) {
                m = m * n;
                prevN=n;}}
        }
        System.out.println("the number needed for a perfect square is: "+m);
         }
