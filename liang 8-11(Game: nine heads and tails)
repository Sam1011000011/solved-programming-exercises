/*(Game: nine heads and tails) Nine coins are placed in a 3-by-3 matrix with some
face up and some face down. You can represent the state of the coins using a
3-by-3 matrix with values 0 (heads) and 1 (tails). Here are some examples:
0 0 0 1 0 1 1 1 0 1 0 1 1 0 0
0 1 0 0 0 1 1 0 0 1 1 0 1 1 1
0 0 0 1 0 0 0 0 1 1 0 0 1 1 0
Each state can also be represented using a binary number. For example, the preceding matrices correspond to the numbers
000010000 101001100 110100001 101110100 100111110
There are a total of 512 possibilities, so you can use decimal numbers 0, 1, 2, 3,
. . . , and 511 to represent all states of the matrix. Write a program that prompts
the user to enter a number between 0 and 511 and displays the corresponding
matrix with the characters H and T. */


import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        String[][] matrix=new String[3][3];
        int input=userInput();
        String binary=Integer.toBinaryString(input);
        binaryToMatrix(matrix,binary);
        printMatrix(matrix);
    }

    private static void binaryToMatrix(String[][] matrix, String binary) {
        int num=Integer.parseInt(binary);
        for(int i=matrix.length-1;i>-1;i--)
            for(int j=matrix[i].length-1;j>-1;j--){
                int n=num%10;
                num /=10;
                if(n==0)
                    matrix[i][j]="H";
                else
                    matrix[i][j]="T";
            }
    }
    private static void printMatrix(String[][] matrix){
        for(int i=0;i< matrix.length;i++){
            for(int j=0;j<matrix[i].length;j++)
                System.out.print(matrix[i][j]+" ");
            System.out.println();
        }
    }

    private static int userInput() {
        Scanner sc = new Scanner(System.in);
        System.out.println("enter a number between 0 and 511 ");
        int num= sc.nextInt();
        if(num>511||num<0){
            System.out.println("your input is not valid please try again ");
            num=userInput();
        }
        return num;
    }
}
