/*(Simulation: coupon collector’s problem)A variation of the coupon collector’s problem is to pick cards from
a shuffled deck of 52 cards repeatedly and find out how many picks are needed
before you see one of each suit. Assume a picked card is placed back in the deck
before picking another. Write a program to simulate the number of picks needed
to get four cards from each suit and display the four cards picked (it is possible a
card may be picked twice). Here is a sample run of the program:
Queen of Spades
5 of Clubs
Queen of Hearts
4 of Diamonds
Number of picks: 12*/
public class Main {
    public static boolean[] seen_suits =new boolean[4];
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int pickCount=0;
        while(!allSuitsSeen()){
            int num=(int)(Math.random()*52);
            int card_suit=num/13;
            int card_num=num%13;
            if(!seen_suits[card_suit]){
                seen_suits[card_suit]=true;
                printCard(card_suit,card_num);}
            pickCount++;
        }
        System.out.println("Number of picks: "+pickCount);
}

    private static void printCard(int card_suit, int card_num) {
        System.out.println(getCardNumberName(card_num)+" of "+getCardSuitName(card_suit));
    }

    private static String getCardNumberName(int card_num) {
        switch (card_num){
            case 12:
                return "King";
            case 0:
                return "Ace";
            case 11:
                return "Queens";
            case 10:
                return "Jack";}
        return (card_num+1)+"";
    }

    private static String getCardSuitName(int card_suit) {
        switch (card_suit){
            case 0:
                return "Clubs";
            case 1:
                return "Diamonds";
            case 2:
                return "Hearts";
            case 3:
                return "Spades";
        }
        return "";
    }

    private static boolean allSuitsSeen() {
        for(int i=0;i<4;i++)
            if(!seen_suits[i])
                return false;
        return true;
    }}
